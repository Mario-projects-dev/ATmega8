
EmbeddedSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000072  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000134  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000060c  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000569  00000000  00000000  00000760  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000244  00000000  00000000  00000cc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000f10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032c  00000000  00000000  00000f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006e  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000012ce  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	1c c0       	rjmp	.+56     	; 0x6e <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include <util/delay.h>

int main(int argc, char **argv)
{
	//Set PORTB1 as output
	DDRB=0b00000010;
  38:	82 e0       	ldi	r24, 0x02	; 2
  3a:	87 bb       	out	0x17, r24	; 23

	while(1)
	{
		//Set PB1=High(+5v), this will turn on the LED
		PORTB|=0b00000010;
  3c:	88 b3       	in	r24, 0x18	; 24
  3e:	82 60       	ori	r24, 0x02	; 2
  40:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  42:	2f e9       	ldi	r18, 0x9F	; 159
  44:	86 e8       	ldi	r24, 0x86	; 134
  46:	91 e0       	ldi	r25, 0x01	; 1
  48:	21 50       	subi	r18, 0x01	; 1
  4a:	80 40       	sbci	r24, 0x00	; 0
  4c:	90 40       	sbci	r25, 0x00	; 0
  4e:	e1 f7       	brne	.-8      	; 0x48 <__SREG__+0x9>
  50:	00 c0       	rjmp	.+0      	; 0x52 <__SREG__+0x13>
  52:	00 00       	nop
		_delay_ms(500); // wait for half second, then turn it off

		//Set PB1=Low(GND)
		PORTB&=0b11111101;
  54:	88 b3       	in	r24, 0x18	; 24
  56:	8d 7f       	andi	r24, 0xFD	; 253
  58:	88 bb       	out	0x18, r24	; 24
  5a:	2f e9       	ldi	r18, 0x9F	; 159
  5c:	86 e8       	ldi	r24, 0x86	; 134
  5e:	91 e0       	ldi	r25, 0x01	; 1
  60:	21 50       	subi	r18, 0x01	; 1
  62:	80 40       	sbci	r24, 0x00	; 0
  64:	90 40       	sbci	r25, 0x00	; 0
  66:	e1 f7       	brne	.-8      	; 0x60 <__SREG__+0x21>
  68:	00 c0       	rjmp	.+0      	; 0x6a <__SREG__+0x2b>
  6a:	00 00       	nop
  6c:	e7 cf       	rjmp	.-50     	; 0x3c <main+0x4>

0000006e <_exit>:
  6e:	f8 94       	cli

00000070 <__stop_program>:
  70:	ff cf       	rjmp	.-2      	; 0x70 <__stop_program>
